stages:
  baumgartner_etl:
    desc: "Convert excel file into ORD schema"
    cmd: python multitask/etl_baumgartner_suzuki.py data/baumgartner_suzuki/c8re00032h2.xlsx
      data/baumgartner_suzuki/ord
    deps:
      - data/baumgartner_suzuki/c8re00032h2.xlsx
      - multitask/etl_baumgartner_suzuki.py
    outs:
      - data/baumgartner_suzuki/ord/

  reizman_etl:
    desc: "Convert Reizman data to ORD schema"
    cmd: python multitask/etl_reizman_suzuki.py data/reizman_suzuki/ data/reizman_suzuki/ord/
    deps:
      - data/reizman_suzuki/reizman_suzuki_case_1.csv
      - data/reizman_suzuki/reizman_suzuki_case_2.csv
      - data/reizman_suzuki/reizman_suzuki_case_3.csv
      - data/reizman_suzuki/reizman_suzuki_case_4.csv
      - multitask/etl_reizman_suzuki.py
    outs:
      - data/reizman_suzuki/ord/

  perera_etl:
    desc: "Convert Perera to seperate datasets for each reactant"
    cmd: python multitask/etl_perera.py data/perera_suzuki/perera.pb data/perera_suzuki/ord
    deps:
      - multitask/etl_perera.py
      - data/perera_suzuki/perera.pb
    outs:
      - data/perera_suzuki/ord

  baumgartner_suzuki_benchmark_training:
    desc: "Train a benchmark based on data in the ORD schema format"
    cmd: >-
      python multitask/suzuki_benchmark_training.py
      data/baumgartner_suzuki/ord/baumgartner_suzuki.pb
      data/baumgartner_suzuki/emulator
      figures/
      --${suzuki_benchmark_training.split-catalyst}
      --max-epochs ${suzuki_benchmark_training.max-epochs}
      --cv-folds ${suzuki_benchmark_training.cv-folds}
      --verbose ${suzuki_benchmark_training.verbose}
      --${suzuki_benchmark_training.include-reactant-concentrations}
      --no-print-warnings
    deps:
      - multitask/suzuki_benchmark_training.py
      - multitask/suzuki_emulator.py
      - multitask/suzuki_data_utils.py
      - data/baumgartner_suzuki/ord/
    outs:
    - data/baumgartner_suzuki/emulator/
    - figures/baumgartner_suzuki_parity_plot.png

  reizman_suzuki_benchmark_training:
    foreach: # cases
      - 1
      - 2
      - 3
      - 4
    do:
      desc: "Train a benchmark based on data in the ORD schema format"
      cmd: >-
        python multitask/suzuki_benchmark_training.py
        data/reizman_suzuki/ord/reizman_suzuki_case_${item}.pb
        data/reizman_suzuki/emulator_case_${item}/
        figures/
        --${suzuki_benchmark_training.split-catalyst}
        --max-epochs ${suzuki_benchmark_training.max-epochs}
        --cv-folds ${suzuki_benchmark_training.cv-folds}
        --verbose ${suzuki_benchmark_training.verbose}
        --no-print-warnings
      deps:
        - multitask/suzuki_benchmark_training.py
        - multitask/suzuki_emulator.py
        - multitask/suzuki_data_utils.py
        - data/reizman_suzuki/ord
      outs:
        - data/reizman_suzuki/emulator_case_${item}/
        - figures/reizman_suzuki_case_${item}_parity_plot.png

  suzuki_stbo_baumgartner:
    desc: "Optimization of Baumgartner using Single Task Bayesian Optimization"
    cmd: >-
      python multitask/suzuki_optimization.py stbo
      baumgartner_suzuki
      data/baumgartner_suzuki/emulator
      data/baumgartner_suzuki/results_stbo
      --max-experiments ${suzuki_optimization.max-experiments}
      --batch-size ${suzuki_optimization.batch-size}
      --repeats ${suzuki_optimization.repeats}
    deps:
      - multitask/suzuki_optimization.py
      - multitask/suzuki_emulator.py
      - multitask/suzuki_data_utils.py
      - data/baumgartner_suzuki/emulator
    outs:
      - data/baumgartner_suzuki/results_stbo

  suzuki_stbo_baumgartner_mixed:
    desc: "Optimization of Baumgartner using Mixed Domain Single Task Bayesian Optimization"
    cmd: >-
      python multitask/suzuki_optimization.py stbo
      baumgartner_suzuki
      data/baumgartner_suzuki/emulator
      data/baumgartner_suzuki/results_stbo_mixed_domain
      --brute-force-categorical
      --max-experiments ${suzuki_optimization.max-experiments}
      --batch-size ${suzuki_optimization.batch-size}
      --repeats ${suzuki_optimization.repeats}
    deps:
      - multitask/suzuki_optimization.py
      - multitask/suzuki_emulator.py
      - multitask/suzuki_data_utils.py
      - data/baumgartner_suzuki/emulator
    outs:
      - data/baumgartner_suzuki/results_stbo_mixed_domain

  suzuki_stbo_reizman:
    foreach: # cases
      - 1
      - 2
      - 3
      - 4
    do:
      desc: "Optimization of Reizman using Single Task Bayesian Optimization"
      cmd: >-
        python multitask/suzuki_optimization.py stbo
        reizman_suzuki_case_${item}
        data/reizman_suzuki/emulator_case_${item}
        data/reizman_suzuki/results_stbo_case_${item}/
        --max-experiments ${suzuki_optimization.max-experiments}
        --batch-size ${suzuki_optimization.batch-size}
        --repeats ${suzuki_optimization.repeats}
      deps:
        - multitask/suzuki_optimization.py
        - multitask/suzuki_emulator.py
        - multitask/suzuki_data_utils.py
        - data/reizman_suzuki/emulator_case_${item}
      outs:
        - data/reizman_suzuki/results_stbo_case_${item}/

  suzuki_stbo_reizman_mixed:
    foreach: # cases
      - 1
      - 2
      - 3
      - 4
    do:
      desc: "Optimization of Reizman using Mixed Domain Single Task Bayesian Optimization"
      cmd: >-
        python multitask/suzuki_optimization.py stbo
        reizman_suzuki_case_${item}
        data/reizman_suzuki/emulator_case_${item}
        data/reizman_suzuki/results_stbo_mixed_case_${item}/
        --brute-force-categorical
        --max-experiments ${suzuki_optimization.max-experiments}
        --batch-size ${suzuki_optimization.batch-size}
        --repeats ${suzuki_optimization.repeats}
      deps:
        - multitask/suzuki_optimization.py
        - multitask/suzuki_emulator.py
        - multitask/suzuki_data_utils.py
        - data/reizman_suzuki/emulator_case_${item}
      outs:
        - data/reizman_suzuki/results_stbo_mixed_case_${item}/

  suzuki_mtbo_one_cotraining:
    foreach: ${suzuki_one_experiments}
    do:
      desc: "Optimization using Multitask Bayesian Optimization with one co-training task"
      cmd: >-
        python multitask/suzuki_optimization.py mtbo
        ${item.model_name}
        ${item.benchmark}
        ${item.dataset_1}
        data/multitask_results/results_${key}
        --max-experiments ${suzuki_optimization.max-experiments}
        --batch-size ${suzuki_optimization.batch-size}
        --repeats ${suzuki_optimization.repeats}
        --no-print-warnings
      deps:
        - multitask/suzuki_optimization.py
        - multitask/suzuki_emulator.py
        - multitask/suzuki_data_utils.py
        - ${item.benchmark}
        - ${item.dataset_1}
      outs:
        - data/multitask_results/results_${key}

  suzuki_mtbo_mixed_one_cotraining:
    foreach: ${suzuki_one_experiments}
    do:
      desc: "Optimization using mixed domain  Multitask Bayesian Optimization with one co-training task"
      cmd: >-
        python multitask/suzuki_optimization.py mtbo
        ${item.model_name}
        ${item.benchmark}
        ${item.dataset_1}
        --brute-force-categorical
        data/multitask_results/results_mixed_${key}
        --max-experiments ${suzuki_optimization.max-experiments}
        --batch-size ${suzuki_optimization.batch-size}
        --repeats ${suzuki_optimization.repeats}
        --no-print-warnings
      deps:
        - multitask/suzuki_optimization.py
        - multitask/suzuki_emulator.py
        - multitask/suzuki_data_utils.py
        - ${item.benchmark}
        - ${item.dataset_1}
      outs:
        - data/multitask_results/results_mixed_${key}

  suzuki_mtbo_four_cotraining:
    foreach:
      baumgartner_suzuki:
        benchmark: data/baumgartner_suzuki/emulator
        dataset_1: data/reizman_suzuki/ord/reizman_suzuki_case_1.pb
        dataset_2: data/reizman_suzuki/ord/reizman_suzuki_case_2.pb
        dataset_3: data/reizman_suzuki/ord/reizman_suzuki_case_3.pb
        dataset_4: data/reizman_suzuki/ord/reizman_suzuki_case_4.pb
      reizman_suzuki_case_1:
        benchmark: data/reizman_suzuki/emulator_case_1
        dataset_1: data/baumgartner_suzuki/ord/baumgartner_suzuki.pb
        dataset_2: data/reizman_suzuki/ord/reizman_suzuki_case_2.pb
        dataset_3: data/reizman_suzuki/ord/reizman_suzuki_case_3.pb
        dataset_4: data/reizman_suzuki/ord/reizman_suzuki_case_4.pb
      reizman_suzuki_case_2:
        benchmark: data/reizman_suzuki/emulator_case_2
        dataset_1: data/baumgartner_suzuki/ord/baumgartner_suzuki.pb
        dataset_2: data/reizman_suzuki/ord/reizman_suzuki_case_1.pb
        dataset_3: data/reizman_suzuki/ord/reizman_suzuki_case_3.pb
        dataset_4: data/reizman_suzuki/ord/reizman_suzuki_case_4.pb
      reizman_suzuki_case_3:
        benchmark: data/reizman_suzuki/emulator_case_3
        dataset_1: data/baumgartner_suzuki/ord/baumgartner_suzuki.pb
        dataset_2: data/reizman_suzuki/ord/reizman_suzuki_case_1.pb
        dataset_3: data/reizman_suzuki/ord/reizman_suzuki_case_2.pb
        dataset_4: data/reizman_suzuki/ord/reizman_suzuki_case_4.pb
      reizman_suzuki_case_4:
        benchmark: data/reizman_suzuki/emulator_case_4
        dataset_1: data/baumgartner_suzuki/ord/baumgartner_suzuki.pb
        dataset_2: data/reizman_suzuki/ord/reizman_suzuki_case_1.pb
        dataset_3: data/reizman_suzuki/ord/reizman_suzuki_case_2.pb
        dataset_4: data/reizman_suzuki/ord/reizman_suzuki_case_3.pb
    do:
      desc: "Optimization using Multitask Bayesian Optimization"
      cmd: >-
        python multitask/suzuki_optimization.py mtbo
        ${key}
        ${item.benchmark}
        ${item.dataset_1} ${item.dataset_2} ${item.dataset_3} ${item.dataset_4}
        data/multitask_results/results_${key}
        --max-experiments ${suzuki_optimization.max-experiments}
        --batch-size ${suzuki_optimization.batch-size}
        --repeats ${suzuki_optimization.repeats}
        --no-print-warnings
      deps:
        - multitask/suzuki_optimization.py
        - multitask/suzuki_emulator.py
        - multitask/suzuki_data_utils.py
        - ${item.benchmark}
      outs:
        - data/multitask_results/results_${key}

  suzuki_mtbo_mixed_four_cotraining:
    foreach:
      baumgartner_suzuki:
        benchmark: data/baumgartner_suzuki/emulator
        dataset_1: data/reizman_suzuki/ord/reizman_suzuki_case_1.pb
        dataset_2: data/reizman_suzuki/ord/reizman_suzuki_case_2.pb
        dataset_3: data/reizman_suzuki/ord/reizman_suzuki_case_3.pb
        dataset_4: data/reizman_suzuki/ord/reizman_suzuki_case_4.pb
      reizman_suzuki_case_1:
        benchmark: data/reizman_suzuki/emulator_case_1
        dataset_1: data/baumgartner_suzuki/ord/baumgartner_suzuki.pb
        dataset_2: data/reizman_suzuki/ord/reizman_suzuki_case_2.pb
        dataset_3: data/reizman_suzuki/ord/reizman_suzuki_case_3.pb
        dataset_4: data/reizman_suzuki/ord/reizman_suzuki_case_4.pb
      reizman_suzuki_case_2:
        benchmark: data/reizman_suzuki/emulator_case_2
        dataset_1: data/baumgartner_suzuki/ord/baumgartner_suzuki.pb
        dataset_2: data/reizman_suzuki/ord/reizman_suzuki_case_1.pb
        dataset_3: data/reizman_suzuki/ord/reizman_suzuki_case_3.pb
        dataset_4: data/reizman_suzuki/ord/reizman_suzuki_case_4.pb
      reizman_suzuki_case_3:
        benchmark: data/reizman_suzuki/emulator_case_3
        dataset_1: data/baumgartner_suzuki/ord/baumgartner_suzuki.pb
        dataset_2: data/reizman_suzuki/ord/reizman_suzuki_case_1.pb
        dataset_3: data/reizman_suzuki/ord/reizman_suzuki_case_2.pb
        dataset_4: data/reizman_suzuki/ord/reizman_suzuki_case_4.pb
      reizman_suzuki_case_4:
        benchmark: data/reizman_suzuki/emulator_case_4
        dataset_1: data/baumgartner_suzuki/ord/baumgartner_suzuki.pb
        dataset_2: data/reizman_suzuki/ord/reizman_suzuki_case_1.pb
        dataset_3: data/reizman_suzuki/ord/reizman_suzuki_case_2.pb
        dataset_4: data/reizman_suzuki/ord/reizman_suzuki_case_3.pb
    do:
      desc: "Optimization using Multitask Bayesian Optimization"
      cmd: >-
        python multitask/suzuki_optimization.py mtbo
        ${key}
        ${item.benchmark}
        ${item.dataset_1} ${item.dataset_2} ${item.dataset_3} ${item.dataset_4}
        data/multitask_results/results_multitask_four_cotraining_mixed_domain_${key}
        --brute-force-categorical
        --max-experiments ${suzuki_optimization.max-experiments}
        --batch-size ${suzuki_optimization.batch-size}
        --repeats ${suzuki_optimization.repeats}
        --no-print-warnings
      deps:
        - multitask/suzuki_optimization.py
        - multitask/suzuki_emulator.py
        - multitask/suzuki_data_utils.py
        - ${item.benchmark}
      outs:
        - data/multitask_results/results_multitask_four_cotraining_mixed_domain_${key}

  kinetic_models_stbo_grid:
    foreach: # cases
      - 1
      - 2
      - 3
      - 4
      - 5
    do: 
      desc: STBO of kinetic models
      cmd: >-
        grid run
        --instance_type t2.2xlarge
        --dockerfile Dockerfile
        --cpus 4
        --memory 8G
        --ignore_warnings
        --description "STBO of kinetic models case ${item}"
        multitask/run_kinetic_optimization_stbo.sh
        --case ${item}
        --output_path data/kinetic_models_stbo_case_${item}
        --noise_level "[0.0, 1.0, 10.0]"
        --num_initial_experiments "[0, 5, 10]"
        --acquisition_function "['qNEI', 'EI']"


  kinetic_models_mtbo_grid_one:
    foreach:
      case_1_case_2:
        case: 1
        ct_case_1: 2
    do: 
      desc: MTBO of kinetic models with one cotraining case
      cmd: >-
        grid run
        --instance_type t2.2xlarge
        --dockerfile Dockerfile
        --cpus 4
        --memory 8G
        --ignore_warnings
        --description "MTBO of kinetic models case ${item.case} cotrained with ${item.ct_case_1}"
        multitask/run_kinetic_optimization_mtbo.sh
        --case ${item.case}
        --ct_cases ${item.ct_case_1}
        --output_path data/kinetic_models_mtbo_case_${item.case}
        --ct_strategy "['STBO', 'LHS']"
        --noise_level "[0.0, 1.0, 10.0]"
        --ct_noise_level "[0.0, 1.0, 10.0]"
        --num_initial_experiments "[0, 5, 10]"
        --ct_num_initial_experiments 10
        --max_ct_experiments "[20, 50]"
        --acquisition_function "['qNEI', 'EI']"
        --ignore_warnings